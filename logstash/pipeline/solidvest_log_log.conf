input {
    file {
        type => "solidvest_log_log"
        path => ["/usr/share/logstash/data/solidvest_log.log"]
#         path => ["/usr/share/logstash/data/test.log"]
        start_position => "beginning"
        stat_interval => "1 hour"
        sincedb_path => "/usr/share/logstash/data/solidvest_log_log_sincedb.txt"
        sincedb_write_interval => "1 minute"
    }
}

filter {
    grok {
        break_on_match => true
        match => {
          "message" => [
          # first pattern to try
            "%{DATA:timestamp} %{WORD:log_level} %{GREEDYDATA:logger} > %{GREEDYDATA:log_message}",
          # less common pattern
            "%{DATA:timestamp} %{WORD:log_level} %{WORD:logger}: %{GREEDYDATA:log_message}"
         ]
      }
    }
    date {
        match => ["timestamp", "YYYY-MM-dd HH:mm:ss"]
        timezone => "UTC"
        # remove redundant field as we overwrite the default @timestamp field
        remove_field => "timestamp"
    }
}

output {
    elasticsearch {
        hosts => "${ELASTICSEARCH_HOST}"
        cacert => "/usr/share/logstash/config/certs/ca/ca.crt"
        user => "logstash_internal"
        password => "${LOGSTASH_INTERNAL_PASSWORD}"
        index => "logstash-%{type}-index"
    }
#     stdout { codec => rubydebug }
}