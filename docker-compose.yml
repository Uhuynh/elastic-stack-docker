version: "3.7"

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in .env
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: .
      dockerfile: setup/elasticsearch/Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.7.0}
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-elastic-pass}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-kibana-system-pass}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-logstash-internal-pass}
      LOGSTASH_SYSTEM_PASSWORD: ${LOGSTASH_SYSTEM_PASSWORD:-logstash-system-pass}
    volumes:
      - setup:/state
      - ./certs/ca/ca.crt:/usr/share/elasticsearch/config/ca/ca.crt:ro

  es:
    build:
      context: .
      dockerfile: elasticsearch/Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.7.0}
    secrets:
      - source: ca.crt
        target: /usr/share/elasticsearch/config/certs/ca/ca.crt
      - source: es.crt
        target: /usr/share/elasticsearch/config/certs/es/es.crt
      - source: es.key
        target: /usr/share/elasticsearch/config/certs/es/es.key
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 0.0.0.0:${ELASTICSEARCH_TRANSPORT_PORT}:9200
      - 0.0.0.0:${ELASTICSEARCH_HTTP_PORT}:9300
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-elastic-pass}
      ES_HOST: ${ES_HOST:-es}
      ES_JAVA_OPTS: "-Xmx${ES_HEAP:-128m} -Xms${ES_HEAP:-128m}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 20

  kibana:
    depends_on:
      - es
    build:
      context: .
      dockerfile: kibana/Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.7.0}
    secrets:
      - source: ca.crt
        target: /usr/share/kibana/config/certs/ca/ca.crt
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - kibana_data:/usr/share/kibana/data
    ports:
      - 0.0.0.0:${KIBANA_PORT}:5601
    environment:
      ES_HOST: https://${ES_HOST:-es}:9200
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-kibana-system-pass}

  logstash:
    depends_on:
      - es
      - es02
      - es03
    build:
      context: .
      dockerfile: logstash/Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION:-8.7.0}
    secrets:
      - source: ca.crt
        target: /usr/share/logstash/config/certs/ca/ca.crt
    ports:
      - 0.0.0.0:${LOGSTASH_TCP_PORT}:5000
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - logstash_data:/usr/share/logstash/data
    environment:
      ELASTICSEARCH_HOST: https://${ES_HOST:-es}:9200
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-logstash-internal-pass}
      LOGSTASH_SYSTEM_PASSWORD: ${LOGSTASH_SYSTEM_PASSWORD:-logstash-system-pass}
      LS_JAVA_OPTS: "-Xmx${LOGSTASH_HEAP:-128m} -Xms${LOGSTASH_HEAP:-128m}"

volumes:
  setup:
  es_data:
  kibana_data:
  logstash_data:

secrets:
  ca.crt:
    file: certs/ca/ca.crt
  es.crt:
    file: certs/es/es.crt
  es.key:
    file: certs/es/es.key